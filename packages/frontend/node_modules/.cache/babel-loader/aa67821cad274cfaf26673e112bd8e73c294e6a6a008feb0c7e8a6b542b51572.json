{"ast":null,"code":"// src/App.jsx\nimport React,{useState}from'react';import TaskList from'./components/TaskList';import TaskAdd from'./components/TaskAdd';import Calendar from'./components/Calendar';import Navigation from'./components/Navigation';import Welcome from'./components/Welcome';import Leaderboard from'./components/Leaderboard';import Login from'./components/Login';import'./App.css';import Signup from'./components/Signup';/**\r\n * Main App Component\r\n * Manages the application state and renders the main UI\r\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){// State management for tasks and UI\nconst[tasks,setTasks]=useState([]);// Stores all tasks\nconst[currentView,setCurrentView]=useState('login');// Controls which view is displayed\nconst[selectedDate,setSelectedDate]=useState(new Date());// Selected date for calendar\n//Adds a new task to the tasks array\nconst[isLoggedIn,setIsLoggedIn]=useState(false);const[username,setUsername]=useState('');const addTask=taskText=>{if(taskText.trim()){setTasks([...tasks,{id:Date.now(),text:taskText,completed:false,date:selectedDate,points:10// Default points value\n}]);}};/**\r\n     * Toggles the completion status of a task\r\n     */const toggleTask=id=>{setTasks(tasks.map(task=>task.id===id?{...task,completed:!task.completed}:task));};const handleLoginSuccess=()=>{setIsLoggedIn(true);setCurrentView('welcome');// Switch to main content on successful login\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TaskArena\"}),/*#__PURE__*/_jsx(Navigation,{currentView:currentView,setCurrentView:setCurrentView}),/*#__PURE__*/_jsxs(\"main\",{children:[currentView==='welcome'&&/*#__PURE__*/_jsx(Welcome,{setCurrentView:setCurrentView,username:username}),currentView==='tasks'&&/*#__PURE__*/_jsx(TaskList,{tasks:tasks,toggleTask:toggleTask,setCurrentView:setCurrentView}),currentView==='add'&&/*#__PURE__*/_jsx(TaskAdd,{addTask:addTask,setCurrentView:setCurrentView}),currentView==='calendar'&&/*#__PURE__*/_jsx(Calendar,{selectedDate:selectedDate,setSelectedDate:setSelectedDate}),currentView==='leaderboard'&&/*#__PURE__*/_jsx(Leaderboard,{})]})]});};function CloseForm(){setIsLoggedIn(false);setCurrentView('login');// Switch to main content on successful login\n};function handleSignup(){setCurrentView('signup');}return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:isLoggedIn?/*#__PURE__*/// Main app content after login\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"TaskArena\"}),/*#__PURE__*/_jsx(Navigation,{currentView:currentView,setCurrentView:setCurrentView}),/*#__PURE__*/_jsxs(\"main\",{children:[currentView==='welcome'&&/*#__PURE__*/_jsx(Welcome,{setCurrentView:setCurrentView,username:username}),currentView==='tasks'&&/*#__PURE__*/_jsx(TaskList,{tasks:tasks,toggleTask:toggleTask,setCurrentView:setCurrentView}),currentView==='add'&&/*#__PURE__*/_jsx(TaskAdd,{addTask:addTask,setCurrentView:setCurrentView}),currentView==='calendar'&&/*#__PURE__*/_jsx(Calendar,{selectedDate:selectedDate,setSelectedDate:setSelectedDate}),currentView==='leaderboard'&&/*#__PURE__*/_jsx(Leaderboard,{})]})]}):/*#__PURE__*/// Login/Signup forms\n_jsx(_Fragment,{children:currentView==='login'?/*#__PURE__*/_jsx(Login,{onLoginSuccess:handleLoginSuccess,PopSignup:handleSignup}):currentView===\"signup\"?/*#__PURE__*/_jsx(Signup,{LoginSuccess:handleLoginSuccess,closeForm:CloseForm}):null})});}export default App;","map":{"version":3,"names":["React","useState","TaskList","TaskAdd","Calendar","Navigation","Welcome","Leaderboard","Login","Signup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","tasks","setTasks","currentView","setCurrentView","selectedDate","setSelectedDate","Date","isLoggedIn","setIsLoggedIn","username","setUsername","addTask","taskText","trim","id","now","text","completed","date","points","toggleTask","map","task","handleLoginSuccess","children","CloseForm","handleSignup","className","onLoginSuccess","PopSignup","LoginSuccess","closeForm"],"sources":["D:/csc-307/CI-test/CSC-307-TA/packages/frontend/src/App.jsx"],"sourcesContent":["// src/App.jsx\r\nimport React, { useState } from 'react'\r\nimport TaskList from './components/TaskList'\r\nimport TaskAdd from './components/TaskAdd'\r\nimport Calendar from './components/Calendar'\r\nimport Navigation from './components/Navigation'\r\nimport Welcome from './components/Welcome'\r\nimport Leaderboard from './components/Leaderboard'\r\nimport Login from './components/Login'\r\n\r\nimport './App.css'\r\nimport Signup from './components/Signup'\r\n\r\n/**\r\n * Main App Component\r\n * Manages the application state and renders the main UI\r\n */\r\nfunction App() {\r\n    // State management for tasks and UI\r\n    const [tasks, setTasks] = useState([]) // Stores all tasks\r\n    const [currentView, setCurrentView] = useState('login') // Controls which view is displayed\r\n    const [selectedDate, setSelectedDate] = useState(new Date()) // Selected date for calendar\r\n\r\n    //Adds a new task to the tasks array\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    \r\n\r\n    const addTask = (taskText) => {\r\n        if (taskText.trim()) {\r\n            setTasks([\r\n                ...tasks,\r\n                {\r\n                    id: Date.now(),\r\n                    text: taskText,\r\n                    completed: false,\r\n                    date: selectedDate,\r\n                    points: 10, // Default points value\r\n                },\r\n            ])\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles the completion status of a task\r\n     */\r\n    const toggleTask = (id) => {\r\n        setTasks(\r\n            tasks.map((task) =>\r\n                task.id === id ? { ...task, completed: !task.completed } : task\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    const handleLoginSuccess = () => {\r\n        setIsLoggedIn(true);\r\n        setCurrentView('welcome'); // Switch to main content on successful login\r\n        return (\r\n        <div>\r\n        <h1>TaskArena</h1>\r\n        <Navigation\r\n            currentView={currentView}\r\n            setCurrentView={setCurrentView}\r\n        />\r\n        <main>\r\n            {currentView === 'welcome' && (\r\n                <Welcome\r\n                    setCurrentView={setCurrentView}\r\n                    username={username}\r\n                />\r\n            )}\r\n            {currentView === 'tasks' && (\r\n                <TaskList\r\n                    tasks={tasks}\r\n                    toggleTask={toggleTask}\r\n                    setCurrentView={setCurrentView}\r\n                />\r\n            )}\r\n            {currentView === 'add' && (\r\n                <TaskAdd\r\n                    addTask={addTask}\r\n                    setCurrentView={setCurrentView}\r\n                />\r\n            )}\r\n            {currentView === 'calendar' && (\r\n                <Calendar\r\n                    selectedDate={selectedDate}\r\n                    setSelectedDate={setSelectedDate}\r\n                />\r\n            )}\r\n            {currentView === 'leaderboard' && <Leaderboard />}\r\n        </main>\r\n    </div>\r\n        \r\n        )\r\n    };\r\n    function CloseForm() {\r\n        \r\n        setIsLoggedIn(false);\r\n        setCurrentView('login'); // Switch to main content on successful login\r\n    };\r\n    function handleSignup(){\r\n        setCurrentView('signup');\r\n        \r\n    }\r\n    return (\r\n        <div className=\"app\">\r\n            {isLoggedIn ? (\r\n                // Main app content after login\r\n                <div>\r\n                    <h1>TaskArena</h1>\r\n                    <Navigation\r\n                        currentView={currentView}\r\n                        setCurrentView={setCurrentView}\r\n                    />\r\n                    <main>\r\n                        {currentView === 'welcome' && (\r\n                            <Welcome\r\n                                setCurrentView={setCurrentView}\r\n                                username={username}\r\n                            />\r\n                        )}\r\n                        {currentView === 'tasks' && (\r\n                            <TaskList\r\n                                tasks={tasks}\r\n                                toggleTask={toggleTask}\r\n                                setCurrentView={setCurrentView}\r\n                            />\r\n                        )}\r\n                        {currentView === 'add' && (\r\n                            <TaskAdd\r\n                                addTask={addTask}\r\n                                setCurrentView={setCurrentView}\r\n                            />\r\n                        )}\r\n                        {currentView === 'calendar' && (\r\n                            <Calendar\r\n                                selectedDate={selectedDate}\r\n                                setSelectedDate={setSelectedDate}\r\n                            />\r\n                        )}\r\n                        {currentView === 'leaderboard' && <Leaderboard />}\r\n                    </main>\r\n                </div>\r\n            ) : (\r\n                // Login/Signup forms\r\n                <>\r\n                    {currentView === 'login' ? (\r\n                        <Login \r\n                            onLoginSuccess={handleLoginSuccess}\r\n                            PopSignup={handleSignup}\r\n                        />\r\n                    ) : currentView === \"signup\" ? (\r\n                        <Signup \r\n                            LoginSuccess={handleLoginSuccess}\r\n                            closeForm={CloseForm}\r\n                        />\r\n                    ) : null}\r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}