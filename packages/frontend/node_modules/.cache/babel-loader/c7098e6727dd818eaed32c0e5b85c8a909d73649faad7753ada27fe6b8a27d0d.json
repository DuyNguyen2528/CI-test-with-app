{"ast":null,"code":"import React,{useState,useEffect}from'react';import TaskAdd from'./TaskAdd';import TaskList from'./TaskList';import'./Calendar.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Calendar=()=>{const[tasks,setTasks]=useState([]);const[filter,setFilter]=useState(null);const[currentDate,setCurrentDate]=useState(new Date());const dates=generateDatesForMonth(currentDate);useEffect(()=>{const initialTasks=[{id:1,title:'Task 1',date:'2024-11-08',priority:'high',isCompleted:false},{id:2,title:'Task 2',date:'2024-11-09',priority:'medium',isCompleted:false}];setTasks(initialTasks);},[]);const addTask=newTask=>setTasks([...tasks,newTask]);const toggleTaskCompletion=taskId=>{setTasks(tasks.map(task=>task.id===taskId?{...task,isCompleted:!task.isCompleted}:task));};const filterTasks=priority=>setFilter(priority);const filteredTasks=filter?tasks.filter(task=>task.priority===filter):tasks;const renderTasksForDate=date=>{return filteredTasks.filter(task=>task.date===date).map(task=>/*#__PURE__*/_jsxs(\"div\",{className:`task ${task.priority}`,draggable:true,onDragStart:e=>e.dataTransfer.setData(\"taskId\",task.id),children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:task.isCompleted,onChange:()=>toggleTaskCompletion(task.id)}),/*#__PURE__*/_jsx(\"span\",{children:task.title})]},task.id));};const onDrop=(event,date)=>{const taskId=event.dataTransfer.getData(\"taskId\");setTasks(tasks.map(task=>task.id===parseInt(taskId)?{...task,date:date}:task));};const onDragOver=event=>event.preventDefault();const changeMonth=offset=>{const newDate=new Date(currentDate);newDate.setMonth(currentDate.getMonth()+offset);setCurrentDate(newDate);};return/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Calendar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-controls\",children:[/*#__PURE__*/_jsx(TaskAdd,{addTask:addTask}),/*#__PURE__*/_jsx(TaskList,{tasks:tasks,toggleTask:toggleTaskCompletion,setCurrentView:()=>{}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>filterTasks('high'),children:\"High Priority\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>filterTasks('medium'),children:\"Medium Priority\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>filterTasks('low'),children:\"Low Priority\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>filterTasks(null),children:\"Show All\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"month-navigation\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>changeMonth(-1),className:\"arrow\",children:\"\\u25C0\"}),/*#__PURE__*/_jsxs(\"span\",{children:[currentDate.toLocaleString('default',{month:'long'}),\" \",currentDate.getFullYear()]}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>changeMonth(1),className:\"arrow\",children:\"\\u25B6\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-grid\",children:[['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].map(day=>/*#__PURE__*/_jsx(\"div\",{className:\"day-label\",children:day},day)),dates.map(date=>/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-day\",onDrop:e=>onDrop(e,date),onDragOver:onDragOver,children:[/*#__PURE__*/_jsx(\"h2\",{children:new Date(date).getDate()}),renderTasksForDate(date)]},date))]})]});};const generateDatesForMonth=currentDate=>{const year=currentDate.getFullYear();const month=currentDate.getMonth();const dates=[];const daysInMonth=new Date(year,month+1,0).getDate();for(let day=1;day<=daysInMonth;day++){const date=new Date(year,month,day).toISOString().split('T')[0];dates.push(date);}return dates;};export default Calendar;","map":{"version":3,"names":["React","useState","useEffect","TaskAdd","TaskList","jsx","_jsx","jsxs","_jsxs","Calendar","tasks","setTasks","filter","setFilter","currentDate","setCurrentDate","Date","dates","generateDatesForMonth","initialTasks","id","title","date","priority","isCompleted","addTask","newTask","toggleTaskCompletion","taskId","map","task","filterTasks","filteredTasks","renderTasksForDate","className","draggable","onDragStart","e","dataTransfer","setData","children","type","checked","onChange","onDrop","event","getData","parseInt","onDragOver","preventDefault","changeMonth","offset","newDate","setMonth","getMonth","toggleTask","setCurrentView","onClick","toLocaleString","month","getFullYear","day","getDate","year","daysInMonth","toISOString","split","push"],"sources":["D:/csc-307/CI-test/CSC-307-TA/packages/frontend/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskAdd from './TaskAdd';\r\nimport TaskList from './TaskList';\r\nimport './Calendar.css';\r\n\r\nconst Calendar = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [filter, setFilter] = useState(null);\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const dates = generateDatesForMonth(currentDate);\r\n\r\n    useEffect(() => {\r\n        const initialTasks = [\r\n            { id: 1, title: 'Task 1', date: '2024-11-08', priority: 'high', isCompleted: false },\r\n            { id: 2, title: 'Task 2', date: '2024-11-09', priority: 'medium', isCompleted: false },\r\n        ];\r\n        setTasks(initialTasks);\r\n    }, []);\r\n\r\n    const addTask = (newTask) => setTasks([...tasks, newTask]);\r\n\r\n    const toggleTaskCompletion = (taskId) => {\r\n        setTasks(tasks.map(task =>\r\n            task.id === taskId ? { ...task, isCompleted: !task.isCompleted } : task\r\n        ));\r\n    };\r\n\r\n    const filterTasks = (priority) => setFilter(priority);\r\n\r\n    const filteredTasks = filter\r\n        ? tasks.filter(task => task.priority === filter)\r\n        : tasks;\r\n\r\n    const renderTasksForDate = (date) => {\r\n        return filteredTasks\r\n            .filter(task => task.date === date)\r\n            .map(task => (\r\n                <div\r\n                    key={task.id}\r\n                    className={`task ${task.priority}`}\r\n                    draggable\r\n                    onDragStart={(e) => e.dataTransfer.setData(\"taskId\", task.id)}\r\n                >\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={task.isCompleted}\r\n                        onChange={() => toggleTaskCompletion(task.id)}\r\n                    />\r\n                    <span>{task.title}</span>\r\n                </div>\r\n            ));\r\n    };\r\n\r\n    const onDrop = (event, date) => {\r\n        const taskId = event.dataTransfer.getData(\"taskId\");\r\n        setTasks(tasks.map(task =>\r\n            task.id === parseInt(taskId) ? { ...task, date: date } : task\r\n        ));\r\n    };\r\n\r\n    const onDragOver = (event) => event.preventDefault();\r\n\r\n    const changeMonth = (offset) => {\r\n        const newDate = new Date(currentDate);\r\n        newDate.setMonth(currentDate.getMonth() + offset);\r\n        setCurrentDate(newDate);\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-container\">\r\n            <h1>Task Calendar</h1>\r\n            <div className=\"task-controls\">\r\n                <TaskAdd addTask={addTask} />\r\n                <TaskList tasks={tasks} toggleTask={toggleTaskCompletion} setCurrentView={() => {}} />\r\n            </div>\r\n            <div className=\"filter-buttons\">\r\n                <button onClick={() => filterTasks('high')}>High Priority</button>\r\n                <button onClick={() => filterTasks('medium')}>Medium Priority</button>\r\n                <button onClick={() => filterTasks('low')}>Low Priority</button>\r\n                <button onClick={() => filterTasks(null)}>Show All</button>\r\n            </div>\r\n            <div className=\"month-navigation\">\r\n                <span onClick={() => changeMonth(-1)} className=\"arrow\">◀</span>\r\n                <span>{currentDate.toLocaleString('default', { month: 'long' })} {currentDate.getFullYear()}</span>\r\n                <span onClick={() => changeMonth(1)} className=\"arrow\">▶</span>\r\n            </div>\r\n            <div className=\"calendar-grid\">\r\n                {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\r\n                    <div key={day} className=\"day-label\">{day}</div>\r\n                ))}\r\n                {dates.map(date => (\r\n                    <div\r\n                        key={date}\r\n                        className=\"calendar-day\"\r\n                        onDrop={(e) => onDrop(e, date)}\r\n                        onDragOver={onDragOver}\r\n                    >\r\n                        <h2>{new Date(date).getDate()}</h2>\r\n                        {renderTasksForDate(date)}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst generateDatesForMonth = (currentDate) => {\r\n    const year = currentDate.getFullYear();\r\n    const month = currentDate.getMonth();\r\n    const dates = [];\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n        const date = new Date(year, month, day).toISOString().split('T')[0];\r\n        dates.push(date);\r\n    }\r\n    return dates;\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}